<?xml version = "1.0"?>
<project name = "objjc" default = "build" basedir = "." >

    <import file = "../../common.xml" />

    <property name = "Build.Products" location = "${Build}/objjc.build/${Configuration}" />
    <property name = "Build.objjc" location = "${Build}/${Configuration}/objjc" />

    <target name = "clean">
        <delete dir = "${Build.objjc}" verbose = "true" />
        <delete dir = "${Build.Products}" verbose = "true" />
    </target>
        
    <target name = "build">
        
        <mkdir dir = "${Build.Products}" />
        
        <concat destfile = "${Build.Products}/objjc.js">
			<filelist>
                <file name="${basedir}/../Utilities/bridge.js" />
                <file name="${basedir}/../Utilities/regex-bridge.js" />
                <file name="${Build}/Objective-J.build/\${Configuration}/Rhino/Objective-J.js" />
                <file name="${basedir}/objjc.js" />
			</filelist>
		</concat>
        
        <mkdir dir = "${Build.objjc}" />
        
        <jsc>
            <arguments>
                <arg line = "-o objjc.class" />
                <arg value = "-nosource" />
                <arg value = "${Build.Products}/objjc.js" />
            </arguments>
        </jsc>
        
        <move file = "${Build.Products}/objjc.class" tofile = "${Build.objjc}/objjc.class" />
                
        <copy file = "objjc" tofile = "${Build.objjc}/objjc" />
        <chmod file = "${Build.objjc}/objjc" perm = "+x" />
        
    </target>
    
    <target name = "release" depends = "build">
        
        <antcall target = "prepare-release" />
        
        <copy file = "${Build.objjc}/objjc" tofile = "${Build.Cappuccino.Tools.Bin}/objjc" />

        <chmod file = "${Build.Cappuccino.Tools.Bin}/objjc" perm = "+x" />
        
        <copy file = "${Build.objjc}/objjc.class" tofile = "${Build.Cappuccino.Tools.Lib}/objjc.class" />
        
    </target>

</project>
